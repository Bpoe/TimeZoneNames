{
  "name": "TimeZoneNames",
  "tagline": "Provides localized time zone names using CLDR and TZDB sources.",
  "body": "TimeZoneNames\r\n=============\r\n\r\nA simple portable class library that provides localized time zone names using CLDR and TZDB sources.\r\n\r\nWhy?  Because .NET's usual time zone display names are not localized properly, and are often wrong or unsuitable for various scenarios.\r\nRead [this blog post](http://codeofmatt.com/2014/12/26/localized-time-zone-names-in-net/) for more details.\r\n\r\nNuget Installation\r\n=============================================================================\r\n```powershell\r\nPM> Install-Package TimeZoneNames\r\n```\r\n\r\nNotes\r\n=============================================================================\r\nVersion 2.0 introduces some breaking changes, fills in some gaps, and adds a\r\nwhole lot more functionality.  Please upgrade with care.  Thanks.\r\n\r\nDemo\r\n=============================================================================\r\nOne possible scenario for this library is to build a localized time zone selection control.\r\n[Click here for a live demonstration](http://timezonepickerdemo.azurewebsites.net/).\r\n\r\nUsage\r\n=============================================================================\r\n\r\nFirst, import the `TimeZoneNames` namespace:\r\n```csharp\r\nusing TimeZoneNames;\r\n```\r\nAll functionality is provided as static methods from the `TZNames` class.\r\n\r\n## Methods for localizing a single time zone\r\n\r\n### GetNamesForTimeZone\r\n\r\nLook up the localized names for a specific time zone:\r\n```csharp\r\nvar names = TZNames.GetNamesForTimeZone(\"America/Los_Angeles\", \"en-US\");\r\n\r\nnames.Generic == \"Pacific Time\"\r\nnames.Standard == \"Pacific Standard Time\"\r\nnames.Daylight == \"Pacific Daylight Time\"\r\n```\r\n\r\n```csharp\r\nvar names = TZNames.GetNamesForTimeZone(\"America/Los_Angeles\", \"fr-CA\");\r\n\r\nnames.Generic == \"heure du Pacifique\"\r\nnames.Standard == \"heure normale du Pacifique\"\r\nnames.Daylight == \"heure avancée du Pacifique\"\r\n```\r\n\r\nYou can pass a Windows time zone id instead, if you like:\r\n```csharp\r\nvar names = TZNames.GetNamesForTimeZone(\"Romance Standard Time\", \"en-GB\");\r\n\r\nnames.Generic == \"Central European Time\"\r\nnames.Standard == \"Central European Standard Time\"\r\nnames.Daylight == \"Central European Summer Time\"\r\n```\r\n\r\n### GetAbbreviationsForTimeZone\r\nLook up the localized abbreviations for a specific time zone:\r\n```csharp\r\nvar abbreviations = TZNames.GetAbbreviationsForTimeZone(\"America/Los_Angeles\", \"en-US\");\r\n\r\nabbreviations.Generic == \"PT\"\r\nabbreviations.Standard == \"PST\"\r\nabbreviations.Daylight == \"PDT\"\r\n```\r\n\r\nYou can pass a Windows time zone id instead, if you like:\r\n```csharp\r\nvar abbreviations = TZNames.GetAbbreviationsForTimeZone(\"Romance Standard Time\", \"en-GB\");\r\n\r\nnames.Generic == \"CET\"\r\nabbreviations.Standard == \"CET\"\r\nabbreviations.Daylight == \"CEST\"\r\n```\r\n\r\n**Note:** Time zone abbreviations are sometimes inconsistent, and are not necessarily\r\nlocalized correctly for every time zone.  In most cases, you should use abbreviations\r\nfor end-user display output only.  Do not attempt to use abbreviations when parsing input.\r\n\r\n## Methods for listing time zones\r\n\r\n### GetTimeZonesForCountry\r\n\r\nGet a list of time zone names for a specific country, suitable for user time zone\r\nselection.\r\n\r\nReturns a dictionary whose key is the IANA time zone identifier, and whose value\r\nis the localized generic time zone name.  When more than one entry in the result\r\nset shares the same name, then a localized city name is appended in parenthesis\r\nto disambiguate.  (This is usually due to historical differences.)\r\n\r\n```csharp\r\nvar zones = TZNames.GetTimeZonesForCountry(\"BR\", \"pt-BR\");\r\n```\r\n*Output*\r\n\r\nKey                       | Value\r\n--------------------------|--------------------------\r\nAmerica/Eirunepe          | Horário do Acre (Eirunepé)\r\nAmerica/Rio_Branco        | Horário do Acre (Rio Branco)\r\nAmerica/Porto_Velho       | Horário do Amazonas (Porto Velho)\r\nAmerica/Boa_Vista         | Horário do Amazonas (Boa Vista)\r\nAmerica/Manaus            | Horário do Amazonas (Manaus)\r\nAmerica/Campo_Grande      | Horário do Amazonas (Campo Grande)\r\nAmerica/Cuiaba            | Horário do Amazonas (Cuiabá)\r\nAmerica/Belem             | Horário de Brasília (Belém)\r\nAmerica/Fortaleza         | Horário de Brasília (Fortaleza)\r\nAmerica/Recife            | Horário de Brasília (Recife)\r\nAmerica/Araguaina         | Horário de Brasília (Araguaína)\r\nAmerica/Maceio            | Horário de Brasília (Maceió)\r\nAmerica/Bahia             | Horário de Brasília (Bahia)\r\nAmerica/Santarem          | Horário de Brasília (Santarém)\r\nAmerica/Sao_Paulo         | Horário de Brasília (São Paulo)\r\nAmerica/Noronha           | Horário de Fernando de Noronha\r\n\r\nMany scenarios don't require all time zones, so you can specify a `threshold`\r\ndate as an optional parameter:\r\n```csharp\r\nvar zones = TZNames.GetTimeZonesForCountry(\"BR\", \"pt-BR\", new DateTime(2010, 1, 1));\r\n```\r\n*Output*\r\n\r\nKey                       | Value\r\n--------------------------|--------------------------\r\nAmerica/Rio_Branco        | Horário do Acre\r\nAmerica/Manaus            | Horário do Amazonas (Manaus)\r\nAmerica/Cuiaba            | Horário do Amazonas (Cuiabá)\r\nAmerica/Fortaleza         | Horário de Brasília (Fortaleza)\r\nAmerica/Araguaina         | Horário de Brasília (Araguaína)\r\nAmerica/Bahia             | Horário de Brasília (Bahia)\r\nAmerica/Sao_Paulo         | Horário de Brasília (São Paulo)\r\nAmerica/Noronha           | Horário de Fernando de Noronha\r\n\r\nIf you are not concerned with historical time zone differences at all, then\r\npass `DateTimeOffset.UtcNow` to return only time zones that differ in the future.\r\n```csharp\r\nvar zones = TZNames.GetTimeZonesForCountry(\"BR\", \"pt-BR\", DateTimeOffset.UtcNow);\r\n```\r\n*Output*\r\n\r\nKey                       | Value\r\n--------------------------|--------------------------\r\nAmerica/Rio_Branco        | Horário do Acre\r\nAmerica/Manaus            | Horário do Amazonas (Manaus)\r\nAmerica/Cuiaba            | Horário do Amazonas (Cuiabá)\r\nAmerica/Bahia             | Horário de Brasília (Bahia)\r\nAmerica/Sao_Paulo         | Horário de Brasília (São Paulo)\r\nAmerica/Noronha           | Horário de Fernando de Noronha\r\n\r\n### GetTimeZoneIdsForCountry\r\n\r\nGet a list of time zone identifiers for a specific country.  Similar to the\r\n`GetTimeZonesForCountry` method, but without localized names.\r\n```csharp\r\nstring[] zones = TZNames.GetTimeZoneIdsForCountry(\"AU\");\r\n```\r\n*Output*\r\n```\r\nAustralia/Perth\r\nAustralia/Eucla\r\nAustralia/Darwin\r\nAustralia/Broken_Hill\r\nAustralia/Adelaide\r\nAustralia/Brisbane\r\nAustralia/Lindeman\r\nAustralia/Hobart\r\nAustralia/Currie\r\nAustralia/Melbourne\r\nAustralia/Sydney\r\nAustralia/Lord_Howe\r\nAntarctica/Macquarie\r\n```\r\n\r\nLike the `GetTimeZonesForCountry` method, an optional `threshold` parameter is\r\nsupported for limiting the list to those zones that vary only after a specific\r\ndate.\r\n```csharp\r\nstring[] zones = TZNames.GetTimeZoneIdsForCountry(\"AU\", DateTimeOffset.Now);\r\n```\r\n*Output*\r\n```\r\nAustralia/Perth\r\nAustralia/Eucla\r\nAustralia/Darwin\r\nAustralia/Adelaide\r\nAustralia/Brisbane\r\nAustralia/Sydney\r\nAustralia/Lord_Howe\r\nAntarctica/Macquarie\r\n```\r\n\r\n### GetFixedTimeZoneIds\r\n\r\nGets a list of time zone IDs that represent fixed offset from UTC, including UTC itself.\r\nNote that time zones of the form `Etc/GMT[+/-]n` use an inverted sign from the usual\r\nconventions.\r\n\r\nTODO: Add examples for this method.\r\n\r\n### GetFixedTimeZoneNames\r\n\r\nGets the same list of zones as `GetFixedTimeZoneIds`, but includes localized names.\r\n\r\nTODO: Add examples for this method.\r\n\r\n### GetFixedTimeZoneAbbreviations\r\n\r\nGets the same list of zones as `GetFixedTimeZoneIds`, but includes localized abbreviations.\r\n\r\nTODO: Add examples for this method.\r\n\r\n## Additional supporting methods\r\n\r\n### GetCountryNames\r\n\r\nGets a localized list of country names, suitable for selecting a country before\r\nselecting a time zone in a two-dropdown time zone selection control.\r\n\r\nTODO: Add examples for this method.\r\n\r\n### GetLanguageCodes\r\n\r\nGets a list of all language codes supported by this library.  Useful for testing\r\nand validation.\r\n\r\nTODO: Add examples for this method.\r\n",
  "google": "",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}